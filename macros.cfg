########################
###      PROBE       ###
########################
[gcode_macro PROBE_DEPLOY]
gcode:
	G91
	G1 Z15
	G90
	G1 X242 F10000
	G4 P300
	G1 X205

[gcode_macro PROBE_DOCK]
gcode:
	SET_GCODE_VARIABLE MACRO=_VARIABLES VARIABLE=leaveprobe VALUE={ 0 }
	G91
	G1 Z15
	G90
	G1 X242 F10000
	G1 Z2
	G4 P300
	G1 X205 F6000
	G1 Z10

[gcode_macro PROBE_CALIBRATE]
rename_existing: _PROBE_CALIBRATE
gcode:
	SET_GCODE_VARIABLE MACRO=_VARIABLES VARIABLE=leaveprobe VALUE={ 1 }
	G28
	PROBE_DEPLOY
	G90
	G1 Z20
	G1 X115 Y115 F12000
	_PROBE_CALIBRATE
	TESTZ Z=5
	M117 Remove probe
	M118 Remove probe
	SET_GCODE_VARIABLE MACRO=_VARIABLES VARIABLE=leaveprobe VALUE={ 0 }

[gcode_macro PROBE_ACCURACY]
rename_existing: _PROBE_ACCURACY
gcode:
	SET_GCODE_VARIABLE MACRO=_VARIABLES VARIABLE=leaveprobe VALUE={ 1 }
	G28
	PROBE_DEPLOY
	G90
	G1 Y115 X115 F12000
	_PROBE_ACCURACY
	PROBE_DOCK

########################
## START & END GCODE ###
########################
[gcode_macro START_PRINT]
gcode:
	{% set BED_TEMP = params.BED_TEMP|default(45)|float %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(215)|float %}
	G90
	QUESTION_MESH #includes G28
	BED_MESH_CALIBRATE
	G1 Z25
	M190 S{BED_TEMP}
	M109 S{EXTRUDER_TEMP}
 	#eventually add nozzle cleaning here
	G92 E0
	G92 E0
	PURGE_LINES
  
[gcode_macro END_PRINT]
gcode:
	#Move nozzle away from print while retracting
	G91
	G1 X-2 Y-2 E-3 F300
	G1 Z25 F300
	G90
	M84 #Disable steppers
	M106 S0 #part fan off
	M140 S0 #bed off
	M104 S0 #extruder off
	#Printer power on/off after print
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=5

[gcode_macro PURGE_LINES]
gcode:
	G1 Z2.0 F3000
	G1 X0.1 Y20 Z0.3 F5000.0
	G1 X0.1 Y200.0 Z0.3 F1500.0 E15
	G1 X0.4 Y200.0 Z0.3 F5000.0
	G1 X0.4 Y20 Z0.3 F1500.0 E30 
	G92 E0
	G1 Z2.0 F3000
	G1 X5 Y20 Z0.3 F5000.0

########################
###  MESH & LEVELING ###
########################
[gcode_macro QUESTION_MESH]
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Probe for mesh?"
    RESPOND TYPE=command MSG="action:prompt_footer_button Yes|BED_MESH_CALIBRATE_ADAPT"
	RESPOND TYPE=command MSG="action:prompt_footer_button No|RESPOND TYPE=command MSG=action:prompt_end"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro BED_MESH_CALIBRATE_ADAPT]
gcode:
    RESPOND TYPE=command MSG="action:prompt_end"
	SET_GCODE_VARIABLE MACRO=_VARIABLES VARIABLE=leaveprobe VALUE={ 1 }
	G28
	QUERY_PROBE
	PROBE_DEPLOY
	BED_MESH_CALIBRATE ADAPTIVE=1
	PROBE_DOCK

[gcode_macro BED_MESH_CALIBRATE_FULL]
gcode:
	SET_GCODE_VARIABLE MACRO=_VARIABLES VARIABLE=leaveprobe VALUE={ 1 }
	G28
	QUERY_PROBE
	PROBE_DEPLOY
	BED_MESH_CALIBRATE
	PROBE_DOCK

[gcode_macro G29]
gcode:
	BED_MESH_CALIBRATE_FULL

[gcode_macro SCREWS_TILT_CALCULATE]
rename_existing: _SCREWS_TILT_CALCULATE
gcode:
	SET_GCODE_VARIABLE MACRO=_VARIABLES VARIABLE=leaveprobe VALUE={ 1 }
	G28
	PROBE_DEPLOY
	_SCREWS_TILT_CALCULATE
	PROBE_DOCK

########################
###      POWER       ###
########################
[gcode_macro POWER_OFF_PRINTER]
gcode:
	{action_call_remote_method("set_device_power", device="printer_plug", state="off")}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode:
	{% if printer["gcode_macro _VARIABLES"].endpowersetting == 0 and printer['extruder'].temperature < 50 %}
		UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
		POWER_OFF_PRINTER
	{% endif %}
	{% if printer["gcode_macro _VARIABLES"].endpowersetting == 0 and printer['extruder'].temperature >= 50 %}
		UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30
		M118 Shutdown pending extruder cooldown
	{% endif %}
	{% if printer["gcode_macro _VARIABLES"].endpowersetting == 1 %}
		M118 Power remains on
		UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
 
[gcode_macro POWER_ON_PRINTER]
gcode:
	{action_call_remote_method("set_device_power", device="printer_plug", state="on")}

[gcode_macro END_POWER_SETTING]
gcode:
	{% if printer["gcode_macro _VARIABLES"].endpowersetting == 0 %}
	SET_GCODE_VARIABLE MACRO=_VARIABLES VARIABLE=endpowersetting VALUE={ 1 }
	M118 Remain on after print
	{% endif %}
	{% if printer["gcode_macro _VARIABLES"].endpowersetting == 1 %}
	SET_GCODE_VARIABLE MACRO=_VARIABLES VARIABLE=endpowersetting VALUE={ 0 }
	M118 Off after print
	{% endif %}
	

[gcode_macro SOFT_SHUTDOWN]
gcode:
	SET_GCODE_VARIABLE MACRO=_VARIABLES VARIABLE=endpowersetting VALUE={ 0 }
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=1

########################
###     SOFTWARE     ###
########################
[gcode_macro SAVECONFIG]
gcode:
	SAVE_CONFIG

########################
###     VARIABLES    ###
########################
[gcode_macro _VARIABLES]
	variable_leaveprobe: 0
	variable_endpowersetting: 0
gcode:

[gcode_macro GET_VARIABLES]
gcode:
	{% set filter_name = params.NAME|default('')|string|lower %}
	{% set filter_value = params.VALUE|default('')|string|lower %}
	{% set show_cfg = params.SHOW_CFG|default(0)|int %}
	{% set out = [] %}
	{% for key1 in printer %}
	{% for key2 in printer[key1] %}
	{% if (show_cfg or not (key1|lower == 'configfile' and key2|lower in ['config', 'settings'])) and	(filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}
	{% set dummy = out.append("printer['%s'].%s = %s" % (key1, key2, printer[key1][key2])) %}
	{% endif %}
	{% else %}
	{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}
	{% set dummy = out.append("printer['%s'] = %s" % (key1, printer[key1])) %}
	{% endif %}
        {% endfor %}
	{% endfor %}
	{action_respond_info(out|join("\n"))}

